@model JobBoardPlatform.Models.QuizViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Job Application Quiz</title>

    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- Feather Icons -->
    <script src="https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.js"></script>

    <style>
        .glass-card {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(20px);
            -webkit-backdrop-filter: blur(20px);
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.3);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .option-card {
            transition: all 0.3s ease;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            cursor: pointer;
        }

            .option-card:hover {
                border-color: #667eea;
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(102, 126, 234, 0.1);
            }

            .option-card.selected {
                border-color: #667eea;
                background: linear-gradient(135deg, #667eea15 0%, #764ba215 100%);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(102, 126, 234, 0.2);
            }

        .question-counter {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .floating {
            animation: float 6s ease-in-out infinite;
        }

        @@keyframes float {
            0%, 100% {
                transform: translateY(0px);
            }

            50% {
                transform: translateY(-10px);
            }
        }

        .pulse-animation {
            animation: pulse 2s infinite;
        }

        @@keyframes pulse {
            0%, 100% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.05);
            }
        }

        .progress-bar {
            height: 6px;
            background: #e5e7eb;
            border-radius: 3px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #10B981, #059669);
            transition: width 0.3s ease;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50 min-h-screen py-8">

    <!-- Animated Background Elements -->
    <div class="fixed inset-0 overflow-hidden pointer-events-none">
        <div class="absolute -top-20 -right-20 w-40 h-40 bg-purple-200 rounded-full mix-blend-multiply filter blur-xl opacity-30 floating"></div>
        <div class="absolute -bottom-20 -left-20 w-40 h-40 bg-yellow-200 rounded-full mix-blend-multiply filter blur-xl opacity-30 floating" style="animation-delay: -2s;"></div>
    </div>

    <!-- Main Quiz Container -->
    <div class="max-w-4xl mx-auto px-4">
        <!-- Header Card --><br>
        <div class="glass-card p-8 mb-8 text-center">
            <div class="w-20 h-20 bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-lg">
                <i data-feather="help-circle" class="w-10 h-10 text-white"></i>
            </div>
            <h1 class="text-4xl font-bold text-gray-800 mb-4">Job Application Quiz</h1>
            <p class="text-lg text-gray-600 mb-6">
                Complete this assessment to proceed with your job application
            </p>

            <!-- Requirements Card -->
            <div class="bg-yellow-50 border border-yellow-200 rounded-2xl p-6 mb-6">
                <div class="flex items-center justify-center mb-4">
                    <i data-feather="award" class="w-6 h-6 text-yellow-600 mr-3"></i>
                    <h3 class="text-lg font-semibold text-yellow-800">Passing Requirement</h3>
                </div>
                <p class="text-yellow-700 text-center">
                    You must score <span class="font-bold">80% or higher</span> to qualify for this position
                </p>
            </div>

            <!-- Progress Bar -->
            <div class="mb-2">
                <div class="flex justify-between text-sm text-gray-600 mb-2">
                    <span>Quiz Progress</span>
                    <span>@Model.Questions.Count Questions</span>
                </div>
                <div class="progress-bar">
                    <div class="progress-fill" style="width: 0%"></div>
                </div>
            </div>
        </div>

        <!-- Quiz Form -->
        <div class="glass-card p-8">
            @using (Html.BeginForm("TakeQuiz", "JobSeeker", FormMethod.Post, new { @class = "space-y-8", id = "quizForm" }))
            {
                @Html.HiddenFor(m => m.JobId)
                @Html.HiddenFor(m => m.ResumePath)

                for (int i = 0; i < Model.Questions.Count; i++)
                {
                    <div class="question-section p-6 bg-white rounded-2xl border border-gray-200 shadow-sm" data-question="@(i+1)">
                        @Html.HiddenFor(m => m.Questions[i].Id)

                        <!-- Question Header -->
                        <div class="flex items-start mb-6">
                            <div class="question-counter mr-4 flex-shrink-0">
                                @(i+1)
                            </div>
                            <div>
                                <h3 class="text-xl font-semibold text-gray-800 mb-2">@Model.Questions[i].QuestionText</h3>
                                <div class="flex items-center text-sm text-gray-500">
                                    <i data-feather="help-circle" class="w-4 h-4 mr-1"></i>
                                    Select the best answer
                                </div>
                            </div>
                        </div>

                        <!-- Options Grid -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <!-- Option A -->
                            <label class="option-card p-4">
                                <div class="flex items-center">
                                    @Html.RadioButtonFor(m => m.Questions[i].SelectedAnswer, "A", new { @class = "hidden option-radio" })
                                    <div class="w-6 h-6 border-2 border-gray-300 rounded-full mr-3 flex items-center justify-center flex-shrink-0 option-indicator">
                                        <div class="w-3 h-3 bg-blue-500 rounded-full hidden"></div>
                                    </div>
                                    <div>
                                        <div class="font-medium text-gray-700">@Model.Questions[i].OptionA</div>
                                    </div>
                                </div>
                            </label>

                            <!-- Option B -->
                            <label class="option-card p-4">
                                <div class="flex items-center">
                                    @Html.RadioButtonFor(m => m.Questions[i].SelectedAnswer, "B", new { @class = "hidden option-radio" })
                                    <div class="w-6 h-6 border-2 border-gray-300 rounded-full mr-3 flex items-center justify-center flex-shrink-0 option-indicator">
                                        <div class="w-3 h-3 bg-blue-500 rounded-full hidden"></div>
                                    </div>
                                    <div>
                                        <div class="font-medium text-gray-700">@Model.Questions[i].OptionB</div>
                                    </div>
                                </div>
                            </label>

                            <!-- Option C -->
                            <label class="option-card p-4">
                                <div class="flex items-center">
                                    @Html.RadioButtonFor(m => m.Questions[i].SelectedAnswer, "C", new { @class = "hidden option-radio" })
                                    <div class="w-6 h-6 border-2 border-gray-300 rounded-full mr-3 flex items-center justify-center flex-shrink-0 option-indicator">
                                        <div class="w-3 h-3 bg-blue-500 rounded-full hidden"></div>
                                    </div>
                                    <div>
                                        <div class="font-medium text-gray-700">@Model.Questions[i].OptionC</div>
                                    </div>
                                </div>
                            </label>

                            <!-- Option D -->
                            <label class="option-card p-4">
                                <div class="flex items-center">
                                    @Html.RadioButtonFor(m => m.Questions[i].SelectedAnswer, "D", new { @class = "hidden option-radio" })
                                    <div class="w-6 h-6 border-2 border-gray-300 rounded-full mr-3 flex items-center justify-center flex-shrink-0 option-indicator">
                                        <div class="w-3 h-3 bg-blue-500 rounded-full hidden"></div>
                                    </div>
                                    <div>
                                        <div class="font-medium text-gray-700">@Model.Questions[i].OptionD</div>
                                    </div>
                                </div>
                            </label>
                        </div>
                    </div>
                }

                <!-- Submit Button -->
                <div class="text-center pt-6 border-t border-gray-200">
                    <button type="submit" class="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-semibold py-4 px-12 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 flex items-center mx-auto">
                        <i data-feather="send" class="w-5 h-5 mr-3"></i>
                        Submit Quiz Answers
                    </button>
                    <p class="text-sm text-gray-500 mt-4">
                        Make sure all questions are answered before submitting
                    </p>
                </div>
            }
        </div>

        <!-- Quiz Tips -->
        <div class="glass-card p-6 mt-8">
            <h3 class="text-lg font-semibold text-gray-800 mb-4 flex items-center">
                <i data-feather="lightbulb" class="w-5 h-5 mr-2 text-yellow-500"></i>
                Quiz Tips
            </h3>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-600">
                <div class="flex items-center">
                    <i data-feather="clock" class="w-4 h-4 mr-2 text-blue-500"></i>
                    Take your time to read each question carefully
                </div>
                <div class="flex items-center">
                    <i data-feather="check-circle" class="w-4 h-4 mr-2 text-green-500"></i>
                    Only one answer is correct for each question
                </div>
                <div class="flex items-center">
                    <i data-feather="refresh-cw" class="w-4 h-4 mr-2 text-purple-500"></i>
                    You can review and change answers before submitting
                </div>
                <div class="flex items-center">
                    <i data-feather="target" class="w-4 h-4 mr-2 text-red-500"></i>
                    Aim for 80% or higher to pass
                </div>
            </div>
        </div>
    </div>

    <script>
        // Initialize Feather Icons
        feather.replace();

        // Custom radio button functionality
        document.querySelectorAll('.option-card').forEach(card => {
            card.addEventListener('click', function() {
                const radio = this.querySelector('.option-radio');
                const indicator = this.querySelector('.option-indicator div');

                // Remove selected class from all options in this question
                const questionSection = this.closest('.question-section');
                questionSection.querySelectorAll('.option-card').forEach(opt => {
                    opt.classList.remove('selected');
                    opt.querySelector('.option-indicator div').classList.add('hidden');
                });

                // Add selected class to current option
                this.classList.add('selected');
                indicator.classList.remove('hidden');
                radio.checked = true;

                // Update progress bar
                updateProgressBar();
            });
        });

        // Progress bar functionality
        function updateProgressBar() {
            const totalQuestions = @Model.Questions.Count;
            const answeredQuestions = document.querySelectorAll('.option-radio:checked').length;
            const progress = (answeredQuestions / totalQuestions) * 100;

            document.querySelector('.progress-fill').style.width = progress + '%';
        }

        // Form submission validation
        document.getElementById('quizForm').addEventListener('submit', function(e) {
            const totalQuestions = @Model.Questions.Count;
            const answeredQuestions = document.querySelectorAll('.option-radio:checked').length;

            if (answeredQuestions < totalQuestions) {
                e.preventDefault();
                alert(`Please answer all ${totalQuestions} questions before submitting. You have ${totalQuestions - answeredQuestions} questions remaining.`);
            }
        });
    </script>
</body>
</html>