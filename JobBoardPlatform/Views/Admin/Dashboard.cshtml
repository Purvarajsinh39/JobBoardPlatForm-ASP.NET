@model JobBoardPlatform.Models.AdminDashboardViewModel
@{
    ViewBag.Title = "Admin Dashboard";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard</title>

    <!-- Tailwind + AOS + Feather Icons + Chart.js + Vanta.js -->
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanta@latest/dist/vanta.net.min.js"></script>

    <style>
        /* Fixed body and html height */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        /* Gradient header and Vanta background */
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        #vanta-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            z-index: -1;
        }

        /* Glass cards & dashboard card styles */
        .glass-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.18);
        }
        .dashboard-card {
            transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
            border-radius: 16px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            min-height: 140px;
        }
        .dashboard-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 25px rgba(0, 0, 0, 0.1);
        }

        /* Charts */
        .chart-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
            padding: 2rem;
            margin-bottom: 2rem;
        }
        .chart-container:hover {
            box-shadow: 0 15px 25px rgba(0, 0, 0, 0.1);
        }

        /* Card icons and animations */
        .card-icon {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 16px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        }
        .animate-float {
            animation: float 6s ease-in-out infinite;
        }
        @@keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0px); }
        }

        /* Scale up animation from old design */
        @@keyframes scale-up-center-normal {
            0% { transform: scale(0.5); }
            100% { transform: scale(1); }
        }
        .card-body-animated {
            animation: scale-up-center-normal 0.8s ease-out;
        }

        /* Buttons */
        .btn-primary, .btn-success, .btn-danger {
            color: white;
            transition: all 0.3s ease;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            text-decoration: none;
            display: inline-block;
            font-weight: 500;
        }
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        }
        .btn-success {
            background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
        }
        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(67, 233, 123, 0.3);
        }
        .btn-danger {
            background: linear-gradient(135deg, #ff758c 0%, #ff7eb3 100%);
        }
        .btn-danger:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(255, 117, 140, 0.3);
        }
        .btn-sm {
            padding: 0.25rem 0.75rem;
            font-size: 0.875rem;
        }

        /* Table hover */
        .table-row-hover:hover {
            background-color: rgba(102, 126, 234, 0.05);
        }

        /* Wrapper for full height */
        .dashboard-wrapper {
            min-height: 100vh;
            position: relative;
        }

        /* Container adjustments */
        .main-container {
            max-width: 1280px;
            margin: 0 auto;
            padding-left: 1rem;
            padding-right: 1rem;
        }

        @@media (min-width: 640px) {
            .main-container {
                padding-left: 1.5rem;
                padding-right: 1.5rem;
            }
        }

        @@media (min-width: 1024px) {
            .main-container {
                padding-left: 2rem;
                padding-right: 2rem;
            }
        }

        /* Table styles */
        .modern-table {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            overflow: hidden;
            margin-bottom: 2rem;
        }
        .modern-table table {
            width: 100%;
            border-collapse: collapse;
        }
        .modern-table th {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1rem;
            text-align: left;
            font-weight: 600;
        }
        .modern-table td {
            padding: 1rem;
            border-bottom: 1px solid #e2e8f0;
        }
        .modern-table tr:hover {
            background-color: rgba(102, 126, 234, 0.05);
        }
        .modern-table tr:last-child td {
            border-bottom: none;
        }

        canvas {
            width: 100% !important;
            height: 100% !important;
        }
    </style>
</head>
<body class="bg-gray-50">
    <div class="dashboard-wrapper">
        <div id="vanta-bg"></div>

        <!-- Gradient Header -->
        <div class="gradient-bg py-16 px-4 shadow-lg relative overflow-hidden">
            <div class="absolute inset-0 bg-black opacity-10"></div>
            <div class="main-container relative z-10">
                <div class="flex items-center justify-between">
                    <div>
                        <h1 class="text-5xl font-bold text-white mb-3" data-aos="fade-right">Admin Dashboard</h1>
                        <p class="text-xl text-white opacity-90" data-aos="fade-right" data-aos-delay="100">Welcome back! Here's what's happening today.</p>
                    </div>
                    <div class="animate-float hidden md:block" data-aos="fade-left">
                        <i data-feather="bar-chart-2" class="w-20 h-20 text-white opacity-90"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Dashboard Cards -->
        <div class="main-container py-12 -mt-20 relative z-10">
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
                <!-- Total Jobs -->
                <div class="dashboard-card glass-card card-body-animated" data-aos="fade-up" data-aos-delay="100">
                    <div class="p-8 flex items-center">
                        <div class="card-icon bg-blue-100 text-blue-600">
                            <i data-feather="briefcase" class="w-7 h-7"></i>
                        </div>
                        <div class="ml-6">
                            <p class="text-gray-500 text-sm font-medium">Total Jobs</p>
                            <h3 class="text-4xl font-bold text-gray-800">@Model.TotalJobs</h3>
                        </div>
                    </div>
                </div>
                <!-- Approved Applications -->
                <div class="dashboard-card glass-card card-body-animated" data-aos="fade-up" data-aos-delay="200">
                    <div class="p-8 flex items-center">
                        <div class="card-icon bg-green-100 text-green-600">
                            <i data-feather="check-circle" class="w-7 h-7"></i>
                        </div>
                        <div class="ml-6">
                            <p class="text-gray-500 text-sm font-medium">Approved Applications</p>
                            <h3 class="text-4xl font-bold text-gray-800">@Model.ApprovedApplications</h3>
                        </div>
                    </div>
                </div>
                <!-- Rejected Applications -->
                <div class="dashboard-card glass-card card-body-animated" data-aos="fade-up" data-aos-delay="300">
                    <div class="p-8 flex items-center">
                        <div class="card-icon bg-red-100 text-red-600">
                            <i data-feather="x-circle" class="w-7 h-7"></i>
                        </div>
                        <div class="ml-6">
                            <p class="text-gray-500 text-sm font-medium">Rejected Applications</p>
                            <h3 class="text-4xl font-bold text-gray-800">@Model.RejectedApplications</h3>
                        </div>
                    </div>
                </div>
                <!-- Pending Jobs -->
                <div class="dashboard-card glass-card card-body-animated" data-aos="fade-up" data-aos-delay="100">
                    <div class="p-8 flex items-center">
                        <div class="card-icon bg-yellow-100 text-yellow-600">
                            <i data-feather="clock" class="w-7 h-7"></i>
                        </div>
                        <div class="ml-6">
                            <p class="text-gray-500 text-sm font-medium">Pending Jobs</p>
                            <h3 class="text-4xl font-bold text-gray-800">@Model.PendingJobs.Count</h3>
                        </div>
                    </div>
                </div>
                <!-- Total Applications -->
                <div class="dashboard-card glass-card card-body-animated" data-aos="fade-up" data-aos-delay="200">
                    <div class="p-8 flex items-center">
                        <div class="card-icon bg-indigo-100 text-indigo-600">
                            <i data-feather="file-text" class="w-7 h-7"></i>
                        </div>
                        <div class="ml-6">
                            <p class="text-gray-500 text-sm font-medium">Total Applications</p>
                            <h3 class="text-4xl font-bold text-gray-800">@Model.TotalApplications</h3>
                        </div>
                    </div>
                </div>
                <!-- Total Employers -->
                <div class="dashboard-card glass-card card-body-animated" data-aos="fade-up" data-aos-delay="300">
                    <div class="p-8 flex items-center">
                        <div class="card-icon bg-purple-100 text-purple-600">
                            <i data-feather="users" class="w-7 h-7"></i>
                        </div>
                        <div class="ml-6">
                            <p class="text-gray-500 text-sm font-medium">Total Employers</p>
                            <h3 class="text-4xl font-bold text-gray-800">@Model.TotalEmployers</h3>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Analytics Section -->
            <h2 class="text-3xl font-bold text-gray-800 mb-8" data-aos="fade-up">Analytics Dashboard</h2>
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12">

                <div class="chart-container" data-aos="fade-up" data-aos-delay="100">
                    <h3 class="text-xl font-semibold text-gray-700 mb-6">Jobs Posted Per Month</h3>
                    <div class="h-80">
                        <canvas id="jobsPerMonthChart"></canvas>
                    </div>
                </div>

                <div class="chart-container" data-aos="fade-up" data-aos-delay="200">
                    <h3 class="text-xl font-semibold text-gray-700 mb-6">Applications Status</h3>
                    <div class="h-80">
                        <canvas id="applicationsPerStatusChart"></canvas>
                    </div>
                </div>

                <div class="chart-container" data-aos="fade-up" data-aos-delay="300">
                    <h3 class="text-xl font-semibold text-gray-700 mb-6">Applications Received Per Month</h3>
                    <div class="h-80">
                        <canvas id="applicationsPerMonthChart"></canvas>
                    </div>
                </div>

                <div class="chart-container" data-aos="fade-up" data-aos-delay="400">
                    <h3 class="text-xl font-semibold text-gray-700 mb-6">Jobs By Category</h3>
                    <div class="h-80">
                        <canvas id="jobsByCategoryChart"></canvas>
                    </div>
                </div>

            </div>

            <!-- Pending Job Approvals Section -->
            @*@if (Model.PendingJobs != null && Model.PendingJobs.Any())
            {
                <div data-aos="fade-up" data-aos-delay="500">
                    <div class="flex justify-between items-center mb-6">
                        <h2 class="text-3xl font-bold text-gray-800">Pending Job Approvals</h2>
                        <a href="@Url.Action("DownloadJobsExcel", "Admin")" class="btn-success">
                            📥 Download All Jobs (Excel)
                        </a>
                    </div>

                    <div class="modern-table">
                        <table>
                            <thead>
                                <tr>
                                    <th>Title</th>
                                    <th>Description</th>
                                    <th>Category</th>
                                    <th>Location</th>
                                    <th>Posted Date</th>
                                    <th>Posted By</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var job in Model.PendingJobs)
                                {
                                    <tr class="table-row-hover">
                                        <td class="font-medium text-gray-900">@job.Title</td>
                                        <td class="text-gray-600">@job.Description</td>
                                        <td>
                                            <span class="px-2 py-1 text-xs font-semibold rounded-full bg-blue-100 text-blue-800">
                                                @job.Category
                                            </span>
                                        </td>
                                        <td class="text-gray-600">@job.Location</td>
                                        <td class="text-gray-600">@job.PostedDate.ToString("dd-MM-yyyy")</td>
                                        <td class="text-gray-600">@job.PostedByName</td>
                                        <td>
                                            <div class="flex space-x-2">
                                                <a href="@Url.Action("Approve", "Admin", new { id = job.Id })" class="btn-success btn-sm">
                                                    Approve
                                                </a>
                                                <a href="@Url.Action("Reject", "Admin", new { id = job.Id })" class="btn-danger btn-sm">
                                                    Reject
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }*@
        </div>
    </div>

    <script>
        // Init AOS & feather icons
        AOS.init({ duration: 800, easing: 'ease-in-out', once: true });
        feather.replace();

        // Vanta.js background
        VANTA.NET({
            el: "#vanta-bg",
            mouseControls: true,
            touchControls: true,
            gyroControls: false,
            minHeight: 200.00,
            minWidth: 200.00,
            scale: 1.00,
            scaleMobile: 1.00,
            color: 0x667eea,
            backgroundColor: 0xf8fafc,
            points: 12.00,
            maxDistance: 22.00,
            spacing: 18.00
        });

        // Chart config
        const chartColors = [
            '#1F77B4', '#FF7F0E', '#2CA02C', '#D62728', '#9467BD',
            '#8C564B', '#E377C2', '#7F7F7F', '#BCBD22', '#17BECF'
        ];

        const commonOptions = {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'top',
                    labels: {
                        color: '#333',
                        font: { size: 14, weight: 'bold', family: 'Inter, sans-serif' },
                        padding: 20,
                        usePointStyle: true
                    }
                },
                tooltip: {
                    backgroundColor: '#fff',
                    titleColor: '#000',
                    bodyColor: '#333',
                    borderColor: '#ccc',
                    borderWidth: 1,
                    bodyFont: { size: 13 },
                    padding: 10,
                    cornerRadius: 8,
                    displayColors: true,
                    callbacks: {
                        label: function (context) {
                            return context.dataset.label + ': ' + context.formattedValue;
                        }
                    }
                }
            },
            animation: { duration: 800, easing: 'easeOutQuart' },
            scales: {
                y: {
                    beginAtZero: true,
                    grid: { color: '#e2e8f0', drawBorder: false },
                    ticks: { color: '#718096' }
                },
                x: {
                    grid: { display: false, drawBorder: false },
                    ticks: { color: '#718096' }
                }
            }
        };

        const roundChartOptions = {
            ...commonOptions,
            scales: {},
            cutout: '65%',
            plugins: {
                ...commonOptions.plugins,
                legend: {
                    ...commonOptions.plugins.legend,
                    position: 'right'
                }
            }
        };

        // Jobs Per Month Chart
        fetch('@Url.Action("GetJobsPerMonth", "Admin")')
            .then(res => res.json())
            .then(data => {
                const ctx = document.getElementById('jobsPerMonthChart').getContext('2d');
                const gradient = ctx.createLinearGradient(0, 0, 0, 400);
                gradient.addColorStop(0, chartColors[0]);
                gradient.addColorStop(1, chartColors[0] + '55');
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: data.map(x => x.Month),
                        datasets: [{
                            label: 'Jobs Posted Per Month',
                            data: data.map(x => x.Count),
                            backgroundColor: gradient,
                            borderColor: chartColors[0],
                            borderWidth: 2,
                            borderRadius: 6
                        }]
                    },
                    options: commonOptions
                });
            });

        // Applications Status Chart
        fetch('@Url.Action("GetApplicationsPerStatus", "Admin")')
            .then(res => res.json())
            .then(data => {
                new Chart(document.getElementById('applicationsPerStatusChart'), {
                    type: 'pie',
                    data: {
                        labels: data.map(x => x.Status),
                        datasets: [{
                            data: data.map(x => x.Count),
                            backgroundColor: [chartColors[1], chartColors[2], chartColors[3]],
                            borderColor: '#fff',
                            borderWidth: 2,
                            hoverOffset: 10
                        }]
                    },
                    options: roundChartOptions
                });
            });

        // Applications Per Month Chart
        fetch('@Url.Action("GetApplicationsPerMonth", "Admin")')
            .then(res => res.json())
            .then(data => {
                const ctx = document.getElementById('applicationsPerMonthChart').getContext('2d');
                const gradient = ctx.createLinearGradient(0, 0, 0, 400);
                gradient.addColorStop(0, chartColors[3] + 'AA');
                gradient.addColorStop(1, chartColors[3] + '11');

                new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: data.map(x => x.Month),
                        datasets: [{
                            label: 'Applications Received Per Month',
                            data: data.map(x => x.Count),
                            borderColor: chartColors[3],
                            backgroundColor: gradient,
                            fill: true,
                            tension: 0.3,
                            pointBackgroundColor: chartColors[3],
                            pointRadius: 5,
                            pointHoverRadius: 7,
                            borderWidth: 2
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            tooltip: {
                                enabled: true,
                                callbacks: {
                                    label: function(context) {
                                        return context.dataset.label + ': ' + context.formattedValue;
                                    }
                                }
                            },
                            legend: {
                                display: true,
                                position: 'top',
                                labels: {
                                    color: '#333',
                                    font: { size: 14, weight: 'bold' }
                                }
                            }
                        },
                        interaction: {
                            mode: 'nearest',
                            intersect: false
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                grid: { color: '#e2e8f0', drawBorder: false },
                                ticks: { color: '#718096' }
                            },
                            x: {
                                grid: { display: false, drawBorder: false },
                                ticks: { color: '#718096' }
                            }
                        }
                    }
                });
            });

        // Jobs By Category Chart
        fetch('@Url.Action("GetJobsByCategory", "Admin")')
            .then(res => res.json())
            .then(data => {
                new Chart(document.getElementById('jobsByCategoryChart'), {
                    type: 'doughnut',
                    data: {
                        labels: data.map(x => x.Category),
                        datasets: [{
                            data: data.map(x => x.Count),
                            backgroundColor: chartColors.slice(0, data.length),
                            borderColor: '#fff',
                            borderWidth: 2,
                            hoverOffset: 12
                        }]
                    },
                    options: roundChartOptions
                });
            });
    </script>
</body>
</html>